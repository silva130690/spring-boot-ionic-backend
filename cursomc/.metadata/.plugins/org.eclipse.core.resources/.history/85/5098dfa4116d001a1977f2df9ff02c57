package com.alex.silva.cursomc.services.validation;

import javax.validation.ConstraintValidator;

import com.alex.silva.cursomc.domain.Cliente;
import com.alex.silva.cursomc.domain.enums.TipoCliente;
import com.alex.silva.cursomc.dto.ClienteDTO;
import com.alex.silva.cursomc.repositories.ClienteRepository;
import com.alex.silva.cursomc.resources.Exception.FieldMessage;
import com.alex.silva.cursomc.services.validation.utils.BR;

import java.util.ArrayList;
import java.util.List;
import javax.validation.ConstraintValidatorContext;

import org.springframework.beans.factory.annotation.Autowired;

public class ClienteUpdateValidator implements ConstraintValidator<ClienteUpdate,ClienteDTO> {
	
	@Autowired
	private ClienteRepository repo;
	
	@Override
	public void initialize(ClienteUpdate ann){
		
	}
	@Override
	public boolean isValid(ClienteDTO objDto,ConstraintValidatorContext context){
		List<FieldMessage>list =new ArrayList<>();
		
		Cliente aux = repo.findByEmail(objDto.getEmail()); 
		
		if(aux!=null) {
			list.add(new FieldMessage("email","Email já existente não é possível adicionar"));
		}
	// inclua os testes aqui, inserindo erros na lista
	for(FieldMessage e:list){
		context.disableDefaultConstraintViolation();
		context.buildConstraintViolationWithTemplate(e.getMensagem()).addPropertyNode(e.getFieldName())
		.addConstraintViolation();
		
	   }
	   return list.isEmpty();	 
	}
}	